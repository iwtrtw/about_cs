一、什么是mybatis 
   MyBatis是支持普通SQL查询，存储过程和高级映射的优秀持久层框架。 MyBatis消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis使用简单的XML或注解用于配置和原始映射，将接口和Java的POJOs（Plan Old Java Objects，普通的Java对象）映射成数据库中的记录。 

二、mybatis包含新特性。
? Mybatis实现了接口绑定，使用更加方便 ? 对象关系映射的改进，效率更高  ? MyBatis采用功能强大的基于OGNL的表达式来消除其他元素。

1.@RequestMapping注解
@RequestMapping(value="/departments")  
public String simplePattern(){  
  
  System.out.println("simplePattern method was called");  
  return "someResult";  
  
}  

 则访问http://localhost/xxxx/departments的时候，会调用 simplePattern方法了  

2.@Controller 控制层，就是我们的action层  @Service 业务逻辑层，就是我们的service或者manager层 
@Repository 持久层，就是我们常说的DAO层  
@Component （字面意思就是组件），它在你确定不了事哪一个层的时候使用。 其实，这四个注解的效果都是一样的，Spring都会把它们当做需要注入的Bean加载在上下文中；

3.@responsebody表示该方法的返回结果直接写入HTTP response body中
一般在异步获取数据时使用，在使用@RequestMapping后，返回值通常解析为跳转路径，加上@responsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中。比如异步获取json数据，加上@responsebody后，会直接返回json数据。

4.generator自动生成mybatis的xml配置、model、map等信息： 
  运行-》cmd->java -jar mybatis-generator-core-1.3.2.jar存放路径 -在eclipse中generatorConfig.xml存放路径 -overwrite  命令。 

如下： 
java -jar D:\mybatis-generator-core-1.3.2\lib\mybatis-generator-core-1.3.2.jar -configfile D:\wc\wanxue\src\main\resources\generatorConfig.xml -overwrite  

成功时输出：MyBatis Generator finished successfully. 

5.@SuppressWarnings可以抑制一些能通过编译但是存在有可能运行异常的代码会发出警告，你确定代码运行时不会出现警告提示的情况下，可以使用这个注释。
("serial") 是序列化警告，当实现了序列化接口的类上缺少serialVersionUID属性的定义时，会出现黄色警告。可以使用@SuppressWarnings将警告关闭

6.容器对于web.xml的加载过程是context-param(上下文初始化参数) >> listener(监听器)  >> fileter(过滤器)  >> servlet

7.Spring 2.5 引入了 @Autowired 注释，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。 通过 @Autowired的使用来消除 set ，get方法。